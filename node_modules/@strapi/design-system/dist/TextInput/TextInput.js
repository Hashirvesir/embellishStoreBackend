import { jsx as r, jsxs as c } from "react/jsx-runtime";
import { forwardRef as h, useRef as n, useImperativeHandle as I } from "react";
import { useId as x } from "../hooks/useId.js";
import { Field as F } from "../Field/Field.js";
import { Flex as R } from "../Flex/Flex.js";
import { FieldLabel as T } from "../Field/FieldLabel.js";
import { FieldInput as g } from "../Field/FieldInput.js";
import { FieldHint as w } from "../Field/FieldHint.js";
import { FieldError as b } from "../Field/FieldError.js";
const j = h(({ name: m, hint: p, error: l, label: e, labelAction: d, id: a, required: f, ...t }, u) => {
  const s = x(a), i = n(null), o = n(null);
  if (!e && !t["aria-label"])
    throw new Error('The TextInput component needs a "label" or an "aria-label" props');
  return I(u, () => ({
    input: o,
    inputWrapperRef: i
  }), []), r("div", { ref: i, children: r(F, { name: m, hint: p, error: l, id: s, required: f, children: c(R, { direction: "column", alignItems: "stretch", gap: 1, children: [e && r(T, { action: d, children: e }), r(g, { ref: o, ...t }), r(w, {}), r(b, {})] }) }) });
});
j.displayName = "TextInput";
export {
  j as TextInput
};
